<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrule" kind="class" language="C++" prot="public">
    <compoundname>rule</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrule_1af496e94b947cba602500f4bca5c9748d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int rule::primitive</definition>
        <argsstring></argsstring>
        <name>primitive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="49" column="1" bodyfile="model/recoPlan/PARC/include/rule.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrule_1ac7b79dd66f75cf0581230d2ac723026d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int rule::id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="50" column="1" bodyfile="model/recoPlan/PARC/include/rule.h" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrule_1afd44c6a165a1d89f3dd8eb44c9618b90" prot="private" static="no" mutable="no">
        <type>vector&lt; int &gt;</type>
        <definition>vector&lt;int&gt; rule::children</definition>
        <argsstring></argsstring>
        <name>children</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="51" column="1" bodyfile="model/recoPlan/PARC/include/rule.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classrule_1a8589edd3862598073ba0395242c8ff30" prot="private" static="no" mutable="no">
        <type>vector&lt; pair&lt; int, int &gt; &gt;</type>
        <definition>vector&lt;pair&lt;int,int&gt; &gt; rule::constraints</definition>
        <argsstring></argsstring>
        <name>constraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="52" column="1" bodyfile="model/recoPlan/PARC/include/rule.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrule_1a31b9394f539f92c71c6848e741230067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rule::rule</definition>
        <argsstring>()</argsstring>
        <name>rule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="24" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="6" bodyend="8"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a57401587d56ba2964054d93c83b4fc91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rule::rule</definition>
        <argsstring>(int _primitive, int _id)</argsstring>
        <name>rule</name>
        <param>
          <type>int</type>
          <declname>_primitive</declname>
        </param>
        <param>
          <type>int</type>
          <declname>_id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="25" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="10" bodyend="12"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a16818e659188b4f1178c0b79db6bad9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rule::rule</definition>
        <argsstring>(int _id, string s)</argsstring>
        <name>rule</name>
        <param>
          <type>int</type>
          <declname>_id</declname>
        </param>
        <param>
          <type>string</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="26" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="14" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1ad46ea2d7e3624b53a987c91561d90755" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>rule::~rule</definition>
        <argsstring>()</argsstring>
        <name>~rule</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="28" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="173" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a683407785d4a437670d3750de5a9443d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rule::addChild</definition>
        <argsstring>(int child)</argsstring>
        <name>addChild</name>
        <param>
          <type>int</type>
          <declname>child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="30" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a5a32df9cc88c5738753f5dab97ef0c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rule::addConstraint</definition>
        <argsstring>(pair&lt; int, int &gt; constraint)</argsstring>
        <name>addConstraint</name>
        <param>
          <type>pair&lt; int, int &gt;</type>
          <declname>constraint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="31" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a254d66c82aa990b8aefbf1f455da4b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rule::addChildren</definition>
        <argsstring>(vector&lt; int &gt; _children)</argsstring>
        <name>addChildren</name>
        <param>
          <type>vector&lt; int &gt;</type>
          <declname>_children</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="32" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1afc2f02214950cd290b778c7cdeed1dce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rule::addConstraints</definition>
        <argsstring>(vector&lt; pair&lt; int, int &gt;&gt; _constraints)</argsstring>
        <name>addConstraints</name>
        <param>
          <type>vector&lt; pair&lt; int, int &gt;&gt;</type>
          <declname>_constraints</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="33" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="67" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1aa565618df29091d61d9c99dcae908c38" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rule::operator&lt;</definition>
        <argsstring>(const rule _r) const</argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classrule" kindref="compound">rule</ref></type>
          <declname>_r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="35" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1ad88299597acd5c12937f762887cc3123" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rule::operator==</definition>
        <argsstring>(const rule _r) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classrule" kindref="compound">rule</ref></type>
          <declname>_r</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="36" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a3583aea5924ca47331105829e7277c51" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rule::operator int</definition>
        <argsstring>() const</argsstring>
        <name>operator int</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="37" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a69402285132b8065910c3a8e66c92ca0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const int</type>
        <definition>const int rule::getPrimitive</definition>
        <argsstring>() const</argsstring>
        <name>getPrimitive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="39" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="87" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a1affa4ca1a9b2d60e9b1e2ebd80af839" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; int &gt; &amp;</type>
        <definition>const vector&lt; int &gt; &amp; rule::getChildren</definition>
        <argsstring>() const</argsstring>
        <name>getChildren</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="40" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a0320b0278bbedf43ea858e5f4531cdc6" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const vector&lt; pair&lt; int, int &gt; &gt; &amp;</type>
        <definition>const vector&lt; pair&lt; int, int &gt; &gt; &amp; rule::getConstraints</definition>
        <argsstring>() const</argsstring>
        <name>getConstraints</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="41" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="97" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1a7f67e512d14d0fb95d55dd819ec6a1cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string rule::toString</definition>
        <argsstring>()</argsstring>
        <name>toString</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="43" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="102" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classrule_1ab13ae3fc714c9706d14ffdbcff0d2ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const string</type>
        <definition>const string rule::toString</definition>
        <argsstring>(map&lt; int, string &gt; revIds)</argsstring>
        <name>toString</name>
        <param>
          <type>map&lt; int, string &gt;</type>
          <declname>revIds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="44" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="128" bodyend="152"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classrule_1aaf5146e3508ab979d741cdada3c6e2b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;, const rule &amp;)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <defname>os</defname>
        </param>
        <param>
          <type>const <ref refid="classrule" kindref="compound">rule</ref> &amp;</type>
          <defname>r</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/rule.h" line="46" column="1" bodyfile="model/recoPlan/PARC/Plan_Library/rule.cpp" bodystart="154" bodyend="171"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="model/recoPlan/PARC/include/rule.h" line="22" column="1" bodyfile="model/recoPlan/PARC/include/rule.h" bodystart="21" bodyend="54"/>
    <listofallmembers>
      <member refid="classrule_1a683407785d4a437670d3750de5a9443d" prot="public" virt="non-virtual"><scope>rule</scope><name>addChild</name></member>
      <member refid="classrule_1a254d66c82aa990b8aefbf1f455da4b54" prot="public" virt="non-virtual"><scope>rule</scope><name>addChildren</name></member>
      <member refid="classrule_1a5a32df9cc88c5738753f5dab97ef0c78" prot="public" virt="non-virtual"><scope>rule</scope><name>addConstraint</name></member>
      <member refid="classrule_1afc2f02214950cd290b778c7cdeed1dce" prot="public" virt="non-virtual"><scope>rule</scope><name>addConstraints</name></member>
      <member refid="classrule_1afd44c6a165a1d89f3dd8eb44c9618b90" prot="private" virt="non-virtual"><scope>rule</scope><name>children</name></member>
      <member refid="classrule_1a8589edd3862598073ba0395242c8ff30" prot="private" virt="non-virtual"><scope>rule</scope><name>constraints</name></member>
      <member refid="classrule_1a1affa4ca1a9b2d60e9b1e2ebd80af839" prot="public" virt="non-virtual"><scope>rule</scope><name>getChildren</name></member>
      <member refid="classrule_1a0320b0278bbedf43ea858e5f4531cdc6" prot="public" virt="non-virtual"><scope>rule</scope><name>getConstraints</name></member>
      <member refid="classrule_1a69402285132b8065910c3a8e66c92ca0" prot="public" virt="non-virtual"><scope>rule</scope><name>getPrimitive</name></member>
      <member refid="classrule_1ac7b79dd66f75cf0581230d2ac723026d" prot="private" virt="non-virtual"><scope>rule</scope><name>id</name></member>
      <member refid="classrule_1a3583aea5924ca47331105829e7277c51" prot="public" virt="non-virtual"><scope>rule</scope><name>operator int</name></member>
      <member refid="classrule_1aa565618df29091d61d9c99dcae908c38" prot="public" virt="non-virtual"><scope>rule</scope><name>operator&lt;</name></member>
      <member refid="classrule_1aaf5146e3508ab979d741cdada3c6e2b2" prot="public" virt="non-virtual"><scope>rule</scope><name>operator&lt;&lt;</name></member>
      <member refid="classrule_1ad88299597acd5c12937f762887cc3123" prot="public" virt="non-virtual"><scope>rule</scope><name>operator==</name></member>
      <member refid="classrule_1af496e94b947cba602500f4bca5c9748d" prot="private" virt="non-virtual"><scope>rule</scope><name>primitive</name></member>
      <member refid="classrule_1a31b9394f539f92c71c6848e741230067" prot="public" virt="non-virtual"><scope>rule</scope><name>rule</name></member>
      <member refid="classrule_1a57401587d56ba2964054d93c83b4fc91" prot="public" virt="non-virtual"><scope>rule</scope><name>rule</name></member>
      <member refid="classrule_1a16818e659188b4f1178c0b79db6bad9e" prot="public" virt="non-virtual"><scope>rule</scope><name>rule</name></member>
      <member refid="classrule_1a7f67e512d14d0fb95d55dd819ec6a1cd" prot="public" virt="non-virtual"><scope>rule</scope><name>toString</name></member>
      <member refid="classrule_1ab13ae3fc714c9706d14ffdbcff0d2ccb" prot="public" virt="non-virtual"><scope>rule</scope><name>toString</name></member>
      <member refid="classrule_1ad46ea2d7e3624b53a987c91561d90755" prot="public" virt="virtual"><scope>rule</scope><name>~rule</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
