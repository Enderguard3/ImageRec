<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_primary_window_8cpp" kind="file" language="C++">
    <compoundname>PrimaryWindow.cpp</compoundname>
    <includes refid="_primary_window_8h" local="yes">PrimaryWindow.h</includes>
    <incdepgraph>
      <node id="924">
        <label>list</label>
      </node>
      <node id="901">
        <label>iterator</label>
      </node>
      <node id="914">
        <label>cnn/YoloGPU.h</label>
        <link refid="_yolo_g_p_u_8h_source"/>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="909">
        <label>opencv2/objdetect.hpp</label>
      </node>
      <node id="899">
        <label>cmath</label>
      </node>
      <node id="897">
        <label>cassert</label>
      </node>
      <node id="910">
        <label>opencv2/ml.hpp</label>
      </node>
      <node id="887">
        <label>opencv2/core/core.hpp</label>
      </node>
      <node id="908">
        <label>opencv2/imgproc.hpp</label>
      </node>
      <node id="883">
        <label>view/PrimaryWindow.cpp</label>
        <link refid="_primary_window_8cpp"/>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="886">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="890">
        <label>string</label>
      </node>
      <node id="892">
        <label>DetectedObject.h</label>
        <link refid="_detected_object_8h"/>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
      </node>
      <node id="893">
        <label>map</label>
      </node>
      <node id="889">
        <label>../model/recoActivite/recoImage/ActivityRegion.h</label>
        <link refid="_activity_region_8h"/>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="895" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="911" relation="include">
        </childnode>
        <childnode refid="912" relation="include">
        </childnode>
        <childnode refid="913" relation="include">
        </childnode>
        <childnode refid="914" relation="include">
        </childnode>
        <childnode refid="917" relation="include">
        </childnode>
        <childnode refid="921" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="918">
        <label>opencv2/dnn.hpp</label>
      </node>
      <node id="919">
        <label>fstream</label>
      </node>
      <node id="907">
        <label>opencv2/imgcodecs.hpp</label>
      </node>
      <node id="903">
        <label>random</label>
      </node>
      <node id="913">
        <label>future</label>
      </node>
      <node id="923">
        <label>ctime</label>
      </node>
      <node id="895">
        <label>selectiveSearchDepth.h</label>
        <link refid="selective_search_depth_8h_source"/>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="901" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
        <childnode refid="902" relation="include">
        </childnode>
        <childnode refid="903" relation="include">
        </childnode>
        <childnode refid="904" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="905" relation="include">
        </childnode>
        <childnode refid="906" relation="include">
        </childnode>
        <childnode refid="907" relation="include">
        </childnode>
        <childnode refid="908" relation="include">
        </childnode>
        <childnode refid="909" relation="include">
        </childnode>
        <childnode refid="910" relation="include">
        </childnode>
      </node>
      <node id="905">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="921">
        <label>stack</label>
      </node>
      <node id="885">
        <label>vector</label>
      </node>
      <node id="916">
        <label>Yolo.h</label>
        <link refid="_yolo_8h_source"/>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
      </node>
      <node id="915">
        <label>../Detector.h</label>
        <link refid="_detector_8h_source"/>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="896">
        <label>array</label>
      </node>
      <node id="891">
        <label>sstream</label>
      </node>
      <node id="906">
        <label>opencv2/highgui.hpp</label>
      </node>
      <node id="888">
        <label>opencv2/highgui/highgui.hpp</label>
      </node>
      <node id="900">
        <label>iostream</label>
      </node>
      <node id="904">
        <label>unordered_map</label>
      </node>
      <node id="922">
        <label>../model/recoActivite/recoAffordance/Affordance.h</label>
        <link refid="_affordance_8h"/>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="923" relation="include">
        </childnode>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="924" relation="include">
        </childnode>
      </node>
      <node id="911">
        <label>mutex</label>
      </node>
      <node id="898">
        <label>chrono</label>
      </node>
      <node id="912">
        <label>thread</label>
      </node>
      <node id="884">
        <label>PrimaryWindow.h</label>
        <link refid="_primary_window_8h"/>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
        <childnode refid="922" relation="include">
        </childnode>
      </node>
      <node id="917">
        <label>cnn/YoloCPU.h</label>
        <link refid="_yolo_c_p_u_8h_source"/>
        <childnode refid="918" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="900" relation="include">
        </childnode>
        <childnode refid="919" relation="include">
        </childnode>
        <childnode refid="920" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
        <childnode refid="915" relation="include">
        </childnode>
        <childnode refid="916" relation="include">
        </childnode>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="894">
        <label>algorithm</label>
      </node>
      <node id="920">
        <label>stdio.h</label>
      </node>
      <node id="902">
        <label>memory</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_primary_window_8h" kindref="compound">PrimaryWindow.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_primary_window_1a8b841d6991616941a6a17abfa60df260" kindref="member">PrimaryWindow::PrimaryWindow</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>display):display(display){</highlight></codeline>
<codeline lineno="4"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(display){</highlight></codeline>
<codeline lineno="5"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namedWindow(<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>window&quot;</highlight><highlight class="normal">,<sp/>WINDOW_AUTOSIZE<sp/>);</highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>window<sp/>for<sp/>display.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;View<sp/>ON\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cout&lt;&lt;</highlight><highlight class="stringliteral">&quot;View<sp/>as<sp/>been<sp/>disable\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="12"><highlight class="normal">}</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_primary_window_1a81d64431709d41e7f3e5583cc494e65a" kindref="member">PrimaryWindow::updateView</ref>(<ref refid="class_activity_region" kindref="compound">ActivityRegion</ref><sp/>*act,std::vector&lt;AffordanceTime*&gt;<sp/>currentAffordance){</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(display){</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>treatPicture(act,currentAffordance);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>imshow(<sp/></highlight><highlight class="stringliteral">&quot;Display<sp/>window&quot;</highlight><highlight class="normal">,<sp/>act-&gt;currentImage<sp/>);<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Show<sp/>our<sp/>image<sp/>inside<sp/>it.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>waitKey(1);<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wait<sp/>an<sp/>instant</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//TODO<sp/>:<sp/>review<sp/>this<sp/>function,<sp/>in<sp/>particular<sp/>/<sp/>Seems<sp/>to<sp/>do<sp/>useless<sp/>things</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_primary_window_1a06bec221f7a0a1f205976a6e21a2f29d" kindref="member">PrimaryWindow::treatPicture</ref>(<ref refid="class_activity_region" kindref="compound">ActivityRegion</ref>*<sp/>act,std::vector&lt;AffordanceTime*&gt;<sp/>currentAffordance)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(display){</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fontface<sp/>=<sp/>cv::FONT_HERSHEY_SIMPLEX;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>scale<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>thickness<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>baseline<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Mat<sp/>pic<sp/>=<sp/>act-&gt;currentImage;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!act-&gt;regions.empty())<sp/>{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;reg<sp/>:<sp/>act-&gt;regions)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::rectangle(pic,<sp/>reg,<sp/>cv::Scalar(100,<sp/>100,<sp/>100),<sp/>3);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!act-&gt;items.empty())<sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;reg<sp/>:<sp/><sp/>act-&gt;items)<sp/>{</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::rectangle(pic,<sp/>reg.getObjPos(),<sp/>cv::Scalar(reg.getRed(),reg.getGreen(),reg.getBlue()),<sp/>6);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>val=reg.getObjName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+std::to_string((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>floor(reg.getProb()<sp/>*<sp/>100))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>val<sp/>=<sp/>showName?<sp/><sp/>reg.getObjName()<sp/>+<sp/>&quot;<sp/>&quot;<sp/><sp/>:<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//val<sp/>+=<sp/>showPercentage<sp/>?<sp/><sp/>std::to_string((int)<sp/>floor(reg.getProb()<sp/>*<sp/>100))<sp/>+<sp/>&quot;%&quot;<sp/>:<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Scalar<sp/>color(reg.getRed(),reg.getGreen(),reg.getBlue());</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pastAffordance<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>pastAffordance-&gt;getName()<sp/>==<sp/>reg.getObjName())<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color=<sp/>cv::Scalar(255,255,255);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Size<sp/>text<sp/>=<sp/>cv::getTextSize(val,<sp/>fontface,<sp/>scale,<sp/>thickness,<sp/>&amp;baseline);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rect<sp/>textBox(reg.getObjPos());</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.y<sp/>-=<sp/>text.height;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.height<sp/>=<sp/>text.height;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.width<sp/>=<sp/>text.width<sp/>*<sp/>1.04;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::rectangle(pic,textBox,color,-1);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::putText(pic,<sp/>val,<sp/>cv::Point(textBox.x,<sp/>textBox.y<sp/>+<sp/>text.height),<sp/>fontface,<sp/>scale,<sp/>CV_RGB(0,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thickness,<sp/>8);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/><sp/>=<sp/>act-&gt;hands.getObjects().size();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;<sp/>hand<sp/>:<sp/><sp/>act-&gt;hands)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::rectangle(pic,<sp/>hand.getObjPos(),<sp/>cv::Scalar(hand.getRed(),hand.getGreen(),hand.getBlue()),<sp/>6);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>val=hand.getObjName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">+std::to_string((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>floor(hand.getProb()<sp/>*<sp/>100))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>val<sp/>=<sp/>showName?<sp/><sp/>hand.getObjName()<sp/>+<sp/>&quot;<sp/>&quot;<sp/><sp/>:<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//val<sp/>+=<sp/>showPercentage<sp/>?<sp/><sp/>std::to_string((int)<sp/>floor(hand.getProb()<sp/>*<sp/>100))<sp/>+<sp/>&quot;%&quot;<sp/>:<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Size<sp/>text<sp/>=<sp/>cv::getTextSize(val,<sp/>fontface,<sp/>scale,<sp/>thickness,<sp/>&amp;baseline);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rect<sp/>textBox(hand.getObjPos());</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.y<sp/>-=<sp/>text.height;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.height<sp/>=<sp/>text.height;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.width<sp/>=<sp/>text.width<sp/>*<sp/>1.04;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::rectangle(pic,textBox,cv::Scalar(hand.getRed(),hand.getGreen(),hand.getBlue()),-1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::putText(pic,<sp/>val,<sp/>cv::Point(textBox.x,<sp/>textBox.y<sp/>+<sp/>text.height),<sp/>fontface,<sp/>scale,<sp/>CV_RGB(0,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thickness,<sp/>8);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<sp/>currentAffordance.empty())<sp/>{</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(std::vector&lt;AffordanceTime<sp/>*&gt;::const_iterator<sp/>it<sp/>=<sp/><sp/>currentAffordance.begin();<sp/>it<sp/>!=<sp/><sp/>currentAffordance.end();it++)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_affordance" kindref="compound">Affordance</ref><sp/>&amp;pos<sp/>=<sp/>(*it)-&gt;getAffordance();</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pastAffordance<sp/>=<sp/>*it;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::rectangle(pic,<sp/>pos.getRegion(),<sp/>cv::Scalar(250,<sp/>0,<sp/>0),<sp/>4);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::string<sp/>val<sp/>=<sp/>pos.getName()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>std::to_string((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>floor(pos.getObjectProbability()<sp/>*<sp/>100))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;%&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//std::string<sp/>val<sp/>=<sp/>showName?<sp/><sp/>pos.getName()<sp/>+<sp/>&quot;<sp/>&quot;<sp/><sp/>:<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//val<sp/>+=<sp/>showPercentage<sp/>?<sp/><sp/>std::to_string((int)<sp/>floor(pos.getObjectProbability()<sp/>*<sp/>100))<sp/>+<sp/>&quot;%&quot;<sp/>:<sp/>&quot;&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Size<sp/>text<sp/>=<sp/>cv::getTextSize(val,<sp/>fontface,<sp/>scale,<sp/>thickness,<sp/>&amp;baseline);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rect<sp/>textBox(pos.getRegion());</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.y<sp/>-=<sp/>text.height;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.height<sp/>=<sp/>text.height;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>textBox.width<sp/>=<sp/>text.width<sp/>*<sp/>1.04;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::rectangle(pic,textBox,cv::Scalar(255,255,255),-1);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::putText(pic,<sp/>val,<sp/>cv::Point(textBox.x,<sp/>textBox.y<sp/>+<sp/>text.height),<sp/>fontface,<sp/>scale,<sp/>CV_RGB(0,<sp/>0,<sp/>0),</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>thickness,<sp/>8);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//this-&gt;imageTreated<sp/>=<sp/>pic;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//cv::resize(this-&gt;imageTreated,this-&gt;resizedPicture,cv::Size(screenSize.first,screenSize.second));</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//programFeed.push_back(resizedPicture.clone());</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="111"><highlight class="normal">}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="view/PrimaryWindow.cpp"/>
  </compounddef>
</doxygen>
