<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_real_sense_8h" kind="file" language="C++">
    <compoundname>RealSense.h</compoundname>
    <includes refid="_video_source_8h" local="yes">VideoSource.h</includes>
    <includes local="no">librealsense2/rs.hpp</includes>
    <includedby refid="_manage_source_video_8h" local="yes">controller/ManageSourceVideo.h</includedby>
    <includedby refid="_real_sense_8cpp" local="yes">controller/sources/RealSense.cpp</includedby>
    <incdepgraph>
      <node id="90">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="88">
        <label>controller/sources/RealSense.h</label>
        <link refid="_real_sense_8h"/>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
      </node>
      <node id="89">
        <label>VideoSource.h</label>
        <link refid="_video_source_8h_source"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="91">
        <label>utility</label>
      </node>
      <node id="92">
        <label>librealsense2/rs.hpp</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="93">
        <label>controller/sources/RealSense.h</label>
        <link refid="_real_sense_8h"/>
        <childnode refid="94" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>main.cpp</label>
        <link refid="main_8cpp"/>
      </node>
      <node id="95">
        <label>model/RecognitionManager.h</label>
        <link refid="_recognition_manager_8h"/>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
      <node id="94">
        <label>controller/ManageSourceVideo.h</label>
        <link refid="_manage_source_video_8h"/>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>REALSENSE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>REALSENSE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>Q_FOREACH</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;VideoSource.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;librealsense2/rs.hpp&gt;</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">//<sp/>Include<sp/>RealSense<sp/>Cross<sp/>Platform<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>USE_REALSENSE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctime&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">RealSense<sp/><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_video_source" kindref="compound">VideoSource</ref>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>RealSense();</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~RealSense();</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>getColorFeed();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>getDepthFeed();</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>getMappedFeed();</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>getOriginalDepth(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>depthFeed;}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>update();</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>hasDepthSource()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>getTimeStamp()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;&lt;font<sp/>color=\&quot;#CD2034\&quot;&gt;&amp;#149;&lt;/font&gt;<sp/>En<sp/>direct&quot;</highlight><highlight class="normal">;}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>getTimePosition()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)((std::clock()<sp/>-<sp/>startTime)/(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>CLOCKS_PER_SEC);}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>getExactTimePosition()<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(std::clock()<sp/>-<sp/>startTime)/(double)<sp/>CLOCKS_PER_SEC;}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>std::pair&lt;int,int&gt;<sp/>getScreenSize(){</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::pair&lt;int,int&gt;(1280,720);}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>faire,<sp/>ajouter<sp/>les<sp/>composants<sp/>necessaire<sp/>pour<sp/>utiliser<sp/>la<sp/>camera<sp/>realsense.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>frame_to_mat(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rs2::frame&amp;<sp/>f);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>depth_frame_to_meters(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rs2::pipeline&amp;<sp/>pipe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rs2::depth_frame&amp;<sp/>f);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>depth_frame_limit(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rs2::pipeline&amp;<sp/>pipe,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>rs2::depth_frame&amp;<sp/>f);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>colorFeed;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>depthFeed;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>depthMeters;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>rs2::colorizer<sp/>color_map;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>rs2::pipeline<sp/>pipe;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>rs2::frameset<sp/>data;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>rs2::align<sp/>align_to;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>last_frame_number;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>startTime;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal">};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//REALSENSE_H</highlight></codeline>
    </programlisting>
    <location file="controller/sources/RealSense.h"/>
  </compounddef>
</doxygen>
