<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="_activity_region_8cpp" kind="file" language="C++">
    <compoundname>ActivityRegion.cpp</compoundname>
    <includes refid="_activity_region_8h" local="yes">ActivityRegion.h</includes>
    <incdepgraph>
      <node id="325">
        <label>iterator</label>
      </node>
      <node id="338">
        <label>cnn/YoloGPU.h</label>
        <link refid="_yolo_g_p_u_8h_source"/>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
      </node>
      <node id="333">
        <label>opencv2/objdetect.hpp</label>
      </node>
      <node id="323">
        <label>cmath</label>
      </node>
      <node id="321">
        <label>cassert</label>
      </node>
      <node id="334">
        <label>opencv2/ml.hpp</label>
      </node>
      <node id="332">
        <label>opencv2/imgproc.hpp</label>
      </node>
      <node id="316">
        <label>opencv2/opencv.hpp</label>
      </node>
      <node id="312">
        <label>string</label>
      </node>
      <node id="315">
        <label>DetectedObject.h</label>
        <link refid="_detected_object_8h"/>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="318" relation="include">
        </childnode>
      </node>
      <node id="317">
        <label>map</label>
      </node>
      <node id="311">
        <label>ActivityRegion.h</label>
        <link refid="_activity_region_8h"/>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="314" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="319" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="335" relation="include">
        </childnode>
        <childnode refid="336" relation="include">
        </childnode>
        <childnode refid="337" relation="include">
        </childnode>
        <childnode refid="338" relation="include">
        </childnode>
        <childnode refid="341" relation="include">
        </childnode>
        <childnode refid="345" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
      </node>
      <node id="342">
        <label>opencv2/dnn.hpp</label>
      </node>
      <node id="343">
        <label>fstream</label>
      </node>
      <node id="331">
        <label>opencv2/imgcodecs.hpp</label>
      </node>
      <node id="327">
        <label>random</label>
      </node>
      <node id="337">
        <label>future</label>
      </node>
      <node id="319">
        <label>selectiveSearchDepth.h</label>
        <link refid="selective_search_depth_8h_source"/>
        <childnode refid="318" relation="include">
        </childnode>
        <childnode refid="320" relation="include">
        </childnode>
        <childnode refid="321" relation="include">
        </childnode>
        <childnode refid="322" relation="include">
        </childnode>
        <childnode refid="323" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="325" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
        <childnode refid="326" relation="include">
        </childnode>
        <childnode refid="327" relation="include">
        </childnode>
        <childnode refid="328" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="329" relation="include">
        </childnode>
        <childnode refid="330" relation="include">
        </childnode>
        <childnode refid="331" relation="include">
        </childnode>
        <childnode refid="332" relation="include">
        </childnode>
        <childnode refid="333" relation="include">
        </childnode>
        <childnode refid="334" relation="include">
        </childnode>
      </node>
      <node id="329">
        <label>opencv2/core.hpp</label>
      </node>
      <node id="345">
        <label>stack</label>
      </node>
      <node id="313">
        <label>vector</label>
      </node>
      <node id="340">
        <label>Yolo.h</label>
        <link refid="_yolo_8h_source"/>
        <childnode refid="312" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
      </node>
      <node id="339">
        <label>../Detector.h</label>
        <link refid="_detector_8h_source"/>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
      </node>
      <node id="320">
        <label>array</label>
      </node>
      <node id="314">
        <label>sstream</label>
      </node>
      <node id="330">
        <label>opencv2/highgui.hpp</label>
      </node>
      <node id="324">
        <label>iostream</label>
      </node>
      <node id="310">
        <label>model/recoActivite/recoImage/ActivityRegion.cpp</label>
        <link refid="_activity_region_8cpp"/>
        <childnode refid="311" relation="include">
        </childnode>
      </node>
      <node id="328">
        <label>unordered_map</label>
      </node>
      <node id="335">
        <label>mutex</label>
      </node>
      <node id="322">
        <label>chrono</label>
      </node>
      <node id="336">
        <label>thread</label>
      </node>
      <node id="341">
        <label>cnn/YoloCPU.h</label>
        <link refid="_yolo_c_p_u_8h_source"/>
        <childnode refid="342" relation="include">
        </childnode>
        <childnode refid="316" relation="include">
        </childnode>
        <childnode refid="313" relation="include">
        </childnode>
        <childnode refid="324" relation="include">
        </childnode>
        <childnode refid="343" relation="include">
        </childnode>
        <childnode refid="344" relation="include">
        </childnode>
        <childnode refid="315" relation="include">
        </childnode>
        <childnode refid="339" relation="include">
        </childnode>
        <childnode refid="340" relation="include">
        </childnode>
        <childnode refid="317" relation="include">
        </childnode>
      </node>
      <node id="318">
        <label>algorithm</label>
      </node>
      <node id="344">
        <label>stdio.h</label>
      </node>
      <node id="326">
        <label>memory</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_activity_region_8cpp_1abea360da764bd6a7eeda8133d7dbf4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; cv::Rect &gt;</type>
        <definition>std::vector&lt; cv::Rect &gt; segmentPic</definition>
        <argsstring>(cv::Mat picture, cv::Mat depthPic)</argsstring>
        <name>segmentPic</name>
        <param>
          <type>cv::Mat</type>
          <declname>picture</declname>
        </param>
        <param>
          <type>cv::Mat</type>
          <declname>depthPic</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoActivite/recoImage/ActivityRegion.cpp" line="61" column="1" bodyfile="model/recoActivite/recoImage/ActivityRegion.cpp" bodystart="62" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="_activity_region_8cpp_1a7cc95dc2709c50a9803dd5d432fefce5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename Base</type>
          </param>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool instanceof</definition>
        <argsstring>(const T *)</argsstring>
        <name>instanceof</name>
        <param>
          <type>const T *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoActivite/recoImage/ActivityRegion.cpp" line="103" column="1" bodyfile="model/recoActivite/recoImage/ActivityRegion.cpp" bodystart="103" bodyend="105"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_activity_region_8h" kindref="compound">ActivityRegion.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"><ref refid="class_activity_region" kindref="compound">ActivityRegion</ref>*<sp/>ActivityRegion::ar_instance<sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"><ref refid="class_activity_region_1a2f202193c7944ed13d0188af8a0cfca7" kindref="member">ActivityRegion::ActivityRegion</ref>(map&lt;string,string&gt;<sp/>setting):objectDetector(0.41f,setting),</highlight></codeline>
<codeline lineno="6"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>currentlySegmenting(false),</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newRegions(false),</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>oldName(</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setting(setting){</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal">}</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_activity_region_1aad8005109904e86239656d558720b198" kindref="member">ActivityRegion::Update</ref>(cv::Mat<sp/>vision,cv::Mat<sp/>depthVision)<sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;cv::Rect&gt;<sp/>objects;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>currentImage<sp/>=<sp/>vision;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>currentImageDepth<sp/>=<sp/>depthVision;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>ii<sp/>=<sp/>this-&gt;detectObjets(vision,<sp/>depthVision);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Test<sp/>pour<sp/>le<sp/>corpus<sp/>Kitchen<sp/>ou<sp/>les<sp/>mains<sp/>sont<sp/>dans<sp/>le<sp/>meme<sp/>systeme.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DetectedObject&gt;<sp/>mains;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::vector&lt;DetectedObject&gt;<sp/>newit;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>it<sp/>:<sp/>ii)<sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(it.getObjName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;hand&quot;</highlight><highlight class="normal"><sp/>||<sp/>it.getObjName()<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;Hand&quot;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mains.push_back(it);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newit.push_back(it);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx.lock();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hands.clear();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items.clear();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hands<sp/>=<sp/><ref refid="class_detected_objects" kindref="compound">DetectedObjects</ref>(mains);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>items<sp/>=<sp/><ref refid="class_detected_objects" kindref="compound">DetectedObjects</ref>(newit);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mtx.unlock();</highlight></codeline>
<codeline lineno="42"><highlight class="normal">}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ActivityRegion::updateManualROI(cv::Mat<sp/>vision,<sp/>cv::Mat<sp/>depthVision,<sp/>cv::Rect<sp/>chosenROI)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>currentImage<sp/>=<sp/>vision;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>currentImageDepth<sp/>=<sp/>depthVision;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>hands.clear();</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>items.clear();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/>regions.push_back(chosenROI);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/>hands<sp/>=<sp/>this-&gt;detectHand(vision,depthVision);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//A<sp/>completer.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">std::vector&lt;cv::Rect&gt;<sp/>segmentPic(cv::Mat<sp/>picture,cv::Mat<sp/>depthPic);</highlight></codeline>
<codeline lineno="62"><highlight class="normal">std::vector&lt;cv::Rect&gt;<sp/>segmentPic(cv::Mat<sp/>picture,</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cv::Mat<sp/>depthPic)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>currentSmall<sp/>=<sp/>picture.clone();</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::Mat<sp/>currentDepthSmall<sp/>=<sp/>depthPic.clone();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>height<sp/>=<sp/>picture.rows;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>picture.cols;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newHeight<sp/>=<sp/>height;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newWidth<sp/>=<sp/>width;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratiox<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>ratioy<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(newHeight<sp/>&gt;<sp/>256<sp/>&amp;&amp;<sp/>newWidth<sp/>&gt;<sp/>200)<sp/>{</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newHeight<sp/>=<sp/>newHeight<sp/>/<sp/>1.25;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ratiox<sp/>=<sp/>ratiox<sp/>*<sp/>1.25;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newWidth<sp/>=<sp/>newWidth<sp/>/<sp/>1.25;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>resize(picture,<sp/>currentSmall,<sp/>cv::Size(newWidth,<sp/>newHeight));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>resize(depthPic,<sp/>currentDepthSmall,<sp/>cv::Size(newWidth,<sp/>newHeight));</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>regions<sp/>=<sp/>selectiveDepth::selectiveSearchDepth(currentSmall,currentDepthSmall,<sp/>150,<sp/>0.9,<sp/>30,<sp/>300,<sp/>currentSmall.rows<sp/>*<sp/>currentSmall.cols/6,<sp/>50);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;cv::Rect&gt;<sp/>newRect;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/>cv::groupRectangles(regions,1,0.1);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>something...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;cv::Rect&gt;<sp/>resizedRegions;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal"><sp/>&amp;&amp;rect<sp/>:<sp/>regions)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cv::Rect<sp/>x(rect.x<sp/>*<sp/>ratiox,<sp/>rect.y<sp/>*<sp/>ratiox,<sp/>rect.width<sp/>*<sp/>ratiox,<sp/>rect.height<sp/>*<sp/>ratiox);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resizedRegions.push_back(x);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>resizedRegions;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Base,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>instanceof(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*)<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::is_base_of&lt;Base,<sp/>T&gt;::value;</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><ref refid="class_detected_objects" kindref="compound">DetectedObjects</ref><sp/><ref refid="class_activity_region_1a2975005c4e59a86dd21f9ac8da394d29" kindref="member">ActivityRegion::detectHand</ref>(cv::Mat<sp/>color,<sp/>cv::Mat<sp/>depth)<sp/>{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detected_objects" kindref="compound">DetectedObjects</ref>(objectDetector.findObjects(color,depth))<sp/>;</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="class_detected_objects" kindref="compound">DetectedObjects</ref><sp/><ref refid="class_activity_region_1a6cc3ac4cd2d6e39367121776fc2e0437" kindref="member">ActivityRegion::detectObjets</ref>(cv::Mat<sp/>color,<sp/>cv::Mat<sp/>depth)<sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="class_detected_objects" kindref="compound">DetectedObjects</ref>(objectDetector.findObjects(color,depth))<sp/>;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_activity_region_1a2a5370220d07bc85f1ea716f8f3c57bb" kindref="member">ActivityRegion::reset</ref>()<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;hands.clear();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;items.clear();</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;regions.clear();</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="model/recoActivite/recoImage/ActivityRegion.cpp"/>
  </compounddef>
</doxygen>
