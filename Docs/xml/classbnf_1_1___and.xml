<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classbnf_1_1___and" kind="class" language="C++" prot="public">
    <compoundname>bnf::_And</compoundname>
    <basecompoundref refid="classbnf_1_1___tie" prot="public" virt="non-virtual">bnf::_Tie</basecompoundref>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classbnf_1_1___and_1ab555bd08f573aad86ad95feb76007c15" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class _Tie</definition>
        <argsstring></argsstring>
        <name>_Tie</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="327" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbnf_1_1___and_1a5e39c58451938ac9fc35e0ac18674f12" prot="protected" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend class</type>
        <definition>friend class Lexem</definition>
        <argsstring></argsstring>
        <name>Lexem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="327" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="327" bodyend="-1"/>
      </memberdef>
      <memberdef kind="friend" id="classbnf_1_1___and_1ab3401f2dc96763fd3fde6f7cb61dbccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classbnf_1_1___and" kindref="compound">_And</ref></type>
        <definition>_And operator+</definition>
        <argsstring>(const char *s, const _Tie &amp;link)</argsstring>
        <name>operator+</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <param>
          <type>const <ref refid="classbnf_1_1___tie" kindref="compound">_Tie</ref> &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="358" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="367" bodyend="368"/>
      </memberdef>
      <memberdef kind="friend" id="classbnf_1_1___and_1aa6647834f11af3c454b2ada531a221e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>friend <ref refid="classbnf_1_1___and" kindref="compound">_And</ref></type>
        <definition>_And operator+</definition>
        <argsstring>(bool(*f)(const char *, size_t), const _Tie &amp;link)</argsstring>
        <name>operator+</name>
        <param>
          <type>bool(*)(const char *, size_t)</type>
          <declname>f</declname>
        </param>
        <param>
          <type>const <ref refid="classbnf_1_1___tie" kindref="compound">_Tie</ref> &amp;</type>
          <declname>link</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="359" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="369" bodyend="370"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classbnf_1_1___and_1ae3d8900b2c6b0d8f0c12b5599db4e225" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bnf::_And::_And</definition>
        <argsstring>(const _Tie &amp;b1, const _Tie &amp;b2)</argsstring>
        <name>_And</name>
        <param>
          <type>const <ref refid="classbnf_1_1___tie" kindref="compound">_Tie</ref> &amp;</type>
          <declname>b1</declname>
        </param>
        <param>
          <type>const <ref refid="classbnf_1_1___tie" kindref="compound">_Tie</ref> &amp;</type>
          <declname>b2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="328" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="328" bodyend="329"/>
      </memberdef>
      <memberdef kind="function" id="classbnf_1_1___and_1a87b30db4759ec37a1919439938d9c84b" prot="protected" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bnf::_And::_And</definition>
        <argsstring>(const _And *rl)</argsstring>
        <name>_And</name>
        <param>
          <type>const <ref refid="classbnf_1_1___and" kindref="compound">_And</ref> *</type>
          <declname>rl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="330" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="330" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="classbnf_1_1___and_1a75af45415ecbf1598ca1a73323d353fd" prot="protected" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int bnf::_And::_parse</definition>
        <argsstring>(_Base *parser) const</argsstring>
        <name>_parse</name>
        <reimplements refid="classbnf_1_1___tie_1a3ef41cf1dbd1d28f3f1ab22256ea3bd8">_parse</reimplements>
        <param>
          <type><ref refid="classbnf_1_1___base" kindref="compound">_Base</ref> *</type>
          <declname>parser</declname>
        </param>
        <exceptions> throw ()</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="332" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="332" bodyend="348"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classbnf_1_1___and_1a70eb1ef20ae6b2a253aabbb69d8653fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>bnf::_And::~_And</definition>
        <argsstring>()</argsstring>
        <name>~_And</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="350" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="350" bodyend="351"/>
      </memberdef>
      <memberdef kind="function" id="classbnf_1_1___and_1af54576e9ade3afb5e1c1c0a36420596c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbnf_1_1___and" kindref="compound">_And</ref> &amp;</type>
        <definition>_And&amp; bnf::_And::operator+</definition>
        <argsstring>(const _Tie &amp;rule2)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classbnf_1_1___tie" kindref="compound">_Tie</ref> &amp;</type>
          <declname>rule2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="352" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="352" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classbnf_1_1___and_1ada6a76d66b9183ae9ba3ea834ea062eb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbnf_1_1___and" kindref="compound">_And</ref> &amp;</type>
        <definition>_And&amp; bnf::_And::operator+</definition>
        <argsstring>(const char *s)</argsstring>
        <name>operator+</name>
        <param>
          <type>const char *</type>
          <declname>s</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="354" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="354" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classbnf_1_1___and_1afa5d2abd30d243c35566ee2597ebebf1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classbnf_1_1___and" kindref="compound">_And</ref> &amp;</type>
        <definition>_And&amp; bnf::_And::operator+</definition>
        <argsstring>(bool(*f)(const char *, size_t))</argsstring>
        <name>operator+</name>
        <param>
          <type>bool(*)(const char *, size_t)</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="model/recoPlan/PARC/include/bnflite.h" line="356" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="356" bodyend="357"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>bnf::_Tie</label>
        <link refid="classbnf_1_1___tie"/>
      </node>
      <node id="0">
        <label>bnf::_And</label>
        <link refid="classbnf_1_1___and"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>bnf::_Tie</label>
        <link refid="classbnf_1_1___tie"/>
      </node>
      <node id="2">
        <label>bnf::_And</label>
        <link refid="classbnf_1_1___and"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="model/recoPlan/PARC/include/bnflite.h" line="326" column="1" bodyfile="model/recoPlan/PARC/include/bnflite.h" bodystart="325" bodyend="360"/>
    <listofallmembers>
      <member refid="classbnf_1_1___and_1ae3d8900b2c6b0d8f0c12b5599db4e225" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>_And</name></member>
      <member refid="classbnf_1_1___and_1a87b30db4759ec37a1919439938d9c84b" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>_And</name></member>
      <member refid="classbnf_1_1___tie_1ae1a6db1009a1212f8d9297446dea3af5" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>_clone</name></member>
      <member refid="classbnf_1_1___tie_1a76631238fac475a2a9b6adfe8e31b529" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>_clue</name></member>
      <member refid="classbnf_1_1___and_1a75af45415ecbf1598ca1a73323d353fd" prot="protected" virt="virtual"><scope>bnf::_And</scope><name>_parse</name></member>
      <member refid="classbnf_1_1___tie_1ade0d3607f99af81e30b336bf73087b8e" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>_safe_delete</name></member>
      <member refid="classbnf_1_1___tie_1a2e6c961a8607120b153024a83bf7e046" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>_setname</name></member>
      <member refid="classbnf_1_1___and_1ab555bd08f573aad86ad95feb76007c15" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>_Tie</name></member>
      <member refid="classbnf_1_1___tie_1a5acb87106d25769797a347fba072dcbd" prot="protected" virt="non-virtual" ambiguityscope="bnf::_Tie::"><scope>bnf::_And</scope><name>_Tie</name></member>
      <member refid="classbnf_1_1___tie_1a4fea3452db346af8ff973c94068f3e4a" prot="protected" virt="non-virtual" ambiguityscope="bnf::_Tie::"><scope>bnf::_And</scope><name>_Tie</name></member>
      <member refid="classbnf_1_1___tie_1a1d2910459130d3377281fe40053b8b72" prot="protected" virt="non-virtual" ambiguityscope="bnf::_Tie::"><scope>bnf::_And</scope><name>_Tie</name></member>
      <member refid="classbnf_1_1___tie_1af1bc0dc1dfc73e91de8d3aef513b12e0" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>call_1st</name></member>
      <member refid="classbnf_1_1___tie_1a5ada30dfe6ddee89e0fc1f590be13266" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>getName</name></member>
      <member refid="classbnf_1_1___tie_1aaa82ae6741bf93468654c650fcb66675" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>inner</name></member>
      <member refid="classbnf_1_1___and_1a5e39c58451938ac9fc35e0ac18674f12" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>Lexem</name></member>
      <member refid="classbnf_1_1___tie_1a3f421bf925f39f3c571fe97981dd82af" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>name</name></member>
      <member refid="classbnf_1_1___tie_1afdd94b85872f795af274e258e66396e7" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator!</name></member>
      <member refid="classbnf_1_1___tie_1a787b666fa012e38d60e04b46c2ad01ef" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator()</name></member>
      <member refid="classbnf_1_1___tie_1a2c5e2c656a996cfefff611ac533be9c1" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator*</name></member>
      <member refid="classbnf_1_1___and_1af54576e9ade3afb5e1c1c0a36420596c" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator+</name></member>
      <member refid="classbnf_1_1___and_1ada6a76d66b9183ae9ba3ea834ea062eb" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator+</name></member>
      <member refid="classbnf_1_1___and_1afa5d2abd30d243c35566ee2597ebebf1" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator+</name></member>
      <member refid="classbnf_1_1___and_1ab3401f2dc96763fd3fde6f7cb61dbccb" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator+</name></member>
      <member refid="classbnf_1_1___and_1aa6647834f11af3c454b2ada531a221e4" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator+</name></member>
      <member refid="classbnf_1_1___tie_1a0fb85544a86647ff1db09eabe235d730" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator|</name></member>
      <member refid="classbnf_1_1___tie_1ab5624a8f40f51c8eeb96ec1a47cccce6" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator|</name></member>
      <member refid="classbnf_1_1___tie_1af1b6229c7c9c3975b82edbfb5c92ef24" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>operator|</name></member>
      <member refid="classbnf_1_1___tie_1ac647ba15a4aee726c7995c611db02492" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>setName</name></member>
      <member refid="classbnf_1_1___tie_1a6de3678b6baf706a990d2da5f77e786e" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>usage</name></member>
      <member refid="classbnf_1_1___tie_1ad389488f34be5f98c813498a24274b7e" prot="protected" virt="non-virtual"><scope>bnf::_And</scope><name>use</name></member>
      <member refid="classbnf_1_1___and_1a70eb1ef20ae6b2a253aabbb69d8653fc" prot="public" virt="non-virtual"><scope>bnf::_And</scope><name>~_And</name></member>
      <member refid="classbnf_1_1___tie_1a1cd353da436d2c8e6bee9f4b5c83cbca" prot="protected" virt="virtual"><scope>bnf::_And</scope><name>~_Tie</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
